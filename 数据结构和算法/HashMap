加载因子为啥是0.75，阈值为啥是8转成红黑树？容量为什么是2的幂？
hashMap的初始容量是16
链表转红黑树是查询和插入效率的平衡

加载因子是0.75是为了在空间利用率和时间复杂度做折衷（尽量避免hash冲突和数组迁移）

容量是2的幂有两个作用：一、高效的计算位置（与运算的效率要比模效率高） 2、方便扩容时数据迁移
位运算的效率远大于取模运算（数组 位置定位，扩容时数组迁移，会多次使用，效率很重要），如果时2的幂的话，hash%length = hash & （length -1）；jdk8时如果时2的幂的话用了一个高低位的转移

根据泊松分布，产生红黑树的概率其实是很小的（当负载因子是0.75，链表长度为8的概率几乎为0），所以jdk8相比jdk7性能提升并不明显，也就
8%~10%

jdk7 HashMap为什么会产生死锁?jdk8是如何优化的？
扩容复制数组时会产生环；jdk8用的是高低位两组，减少了rehash，同时减少了链表的长度
https://blog.csdn.net/qq_35246620/article/details/53418067
https://blog.csdn.net/xiexingshishu/article/details/126384236

1.7数组+链表转换为1.8的数组+链表+红黑树是因为链表查询效率太低了
链表转红黑树的阈值时8，红黑树退化为链表的阈值是6
